name: Deploy Conduit

on: 
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deployment via SSH connection
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            echo "Navigating to project directory"
            DEPLOY_DIR="${{ vars.DEPLOY_DIR }}"
            cd "$DEPLOY_DIR"

            echo "Update or clone the Conduit repository"
            if [ -d "Conduit" ]; then
              cd "$DEPLOY_DIR/Conduit"
              docker compose down
              docker rmi conduit-frontend conduit-backend
              docker volume rm conduit_conduit-volume
              docker builder prune -a
              git pull
              git submodule update --remote --recursive
              echo "Conduit was updated successfully"
            else
              git clone git@github.com:SarahZimmermann-Schmutzler/Conduit.git
              cd "$DEPLOY_DIR/Conduit"
              git submodule init
              git submodule update
              echo "Conduit was cloned successfully"
            fi

            echo "Create .env if necessary"
            if [ -f ".env" ]; then
              echo ".env is already existing"
            else
              echo "Creating .env file..."
              echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
              echo "DEBUG=${{ vars.DEBUG }}" >> .env
              echo "BACKEND_EXTERNAL_PORT=${{ vars.BACKEND_EXTERNAL_PORT }}" >> .env
              echo "IP_ADDRESS_VM=${{ vars.IP_ADDRESS_VM }}" >> .env
              echo "CORS_ORIGIN_WHITELIST=${{ vars.CORS_ORIGIN_WHITELIST }}" >> .env
              echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}" >> .env
              echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" >> .env
              echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" >> .env
              echo "API_URL=${{ vars.API_URL }}" >> .env
              echo "FRONTEND_EXTERNAL_PORT=${{ vars.FRONTEND_EXTERNAL_PORT }}" >> .env
              echo ".env file created successfully"
            fi

            echo "Build and start containers..."
            docker compose up --build -d

            echo "Deployment was successfull!"